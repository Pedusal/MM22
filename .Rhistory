# for (u in y) {
#
#   for (i in x) {
#     taulu[u,i] <- u
#   }
# }
print(pistetaulu)
print(pistetaulu)
as.numeric(koti1)
as.numeric(koti1)
if(koti[1] == koti1[1] & vieras[1] == vieras1[1]) {
print(19)
} else if (merkki[1] == merkki1[1]
& (koti[1] == koti1 [1] | vieras == vieras1[1])){
print(21)
} else if (merkki[1] == merkki1[1]) {
print(2)
} else {
print("hv")
}
if(koti[0] == koti1[0] & vieras[0] == vieras1[0]) {
print(19)
if(koti[0] == koti1[0] & vieras[0] == vieras1[0]) {
print(19)
}
if(koti[0] == koti1[0] & vieras[0] == vieras1[0]) {
print(19)
}
if(koti[0] == koti1[0] & vieras[0] == vieras1[0]) {
print(19)
} else if (merkki[0] == merkki1[0]
& (koti[0] == koti1 [0] | vieras == vieras1[0])){
print(21)
} else if (merkki[0] == merkki1[0]) {
print(2)
} else {
print("hv")
}
dsf
} else {
end
+1
print(21)
print(19)
2+2
}
if(koti[0] == koti1[0] & vieras[0] == vieras1[0]) {
print(19)
}
koti[0]
koti1[0]
if(koti[1]
koti[1]
koti[1]
if(koti[1] == koti1[1] & vieras[1] == vieras1[1]) {
print(19)
}
if(koti[1] == koti1[1] & vieras[1] == vieras1[1]) {
print(19)
} else if (merkki[1] == merkki1[1]
& (koti[1] == koti1 [1] | vieras == vieras1[1])){
print(21)
}
if(koti[1] == koti1[1] & vieras[1] == vieras1[1]) {
print(19)
} else if (merkki[1] == merkki1[1]
& (koti[1] == koti1[1] | vieras == vieras1[1])){
print(21)
}
merkki1[1]
merkki[1]
koti[1]
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
#Setup the working directory:
setwd("C:/Users/Pedu/Documents/GitHub/euro22/data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
#Setup the working directory:
setwd("C:/Users/Pedu/Documents/GitHub/euro22/data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
library(dplyr)
library(knitr)
################### Hae oikea rivi ################
oikearivi <- read_excel("data/11oikearivi.xlsx")
###### Muokkaaa  sopivaksi #############
oikearivi <- oikearivi %>%
filter(!is.na(oikearivi[,6]),
!is.na(oikearivi[,8])
)#%>%
#rename(X__2 = Kotii,
#      X__4 = viieras
#)
############ Aseta tarkistussarjat ##################
koti <- oikearivi$...6
vieras <- oikearivi$...8
koti <- as.numeric(koti)
merkki <- c(1:length(koti))
merkki[1:length(koti)] <- NA
x <- c(1:length(koti))
for (i in x) {
if (koti[i]>vieras[i]){
merkki[i] <- 1
} else if (koti[i] == vieras[i]) {
merkki[i] <- 2
} else if (koti[i]<vieras[i]) {
merkki[i] <- 3
}
}
################# Luo Pistetaulu ###################
pelit <- c(1:50)
pelit[1] <- c("Veikkaaja")
pelit[2] <- c("Yhteensa")
for (i in x) {
pelit[i+2] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
pistetaulu <- matrix(NA,10,50)
colnames(pistetaulu) <- c(pelit)
pistetaulu <- as.data.frame(pistetaulu)
################### Veikkausten tarkistus ja lisays pistetauluun #######
y <- c(2:length(veikkaukset))
for (u in y) {
tarkistettava <- data.frame(veikkaukset[u])
pistetaulu[u-1, 1] <- tarkistettava[1,5]  ## asetetaan veikkaajan nimi
tarkistettava <- tarkistettava %>%
filter(!is.na(...6),
!is.na(...8)
)
koti1 <- tarkistettava$...6
vieras1 <- tarkistettava$...8
koti1 <- as.numeric(koti1)
merkki1 <- c(1:length(koti1))
merkki1[1:length(koti1)] <- NA
for (i in x) {
if(koti1[i]>vieras1[i]){
merkki1[i] <- 1
} else if (koti1[i] == vieras1[i]) {
merkki1[i] <- 2
} else if (koti1[i]<vieras1[i]) {
merkki1[i] <- 3
}
}
x <- c(1:length(koti))
for (i in x) {
if(koti[i] == koti1[i] & vieras[i] == vieras1[i]) {
pistetaulu[u-1, i+2] <- c(3)
} else if (merkki[i] == merkki1[i]
& (koti[i] == koti1[i] | vieras[i] == vieras1[i])){
pistetaulu[u-1, i+1] <- c(2)
} else if (merkki[i] == merkki1[i]) {
pistetaulu[u-1, i+2] <- c(1)
} else {
pistetaulu[u-1, i+2] <- c(0)
}
}
}
pistetaulu$Yhteensa <- apply(pistetaulu[1:10, 1:length(koti)+2], 1, sum)
sort(pistetaulu$Yhteensa)
# #wb <- createWorkbook(type = "xlsx")
# library(xlsx)
# write.xlsx(mydata, "c:/mydata.xlsx")
#
# taulu <- matrix(NA,10,50)
# y <- c(2:10)
# x <- c(1:50)
#
# for (u in y) {
#
#   for (i in x) {
#     taulu[u,i] <- u
#   }
# }
print(pistetaulu)
if(koti[3] == koti1[3] & vieras[3] == vieras1[3]) {
print(3)
}
if(koti[3] == koti1[3] & vieras[3] == vieras1[3]) {
print(3)
} else if (merkki[3] == merkki1[3]
& (koti[3] == koti1[3] | vieras[3] == vieras1[3])){
print(2)
}
if(koti[3] == koti1[3] & vieras[3] == vieras1[3]) {
print(3)
} else if (merkki[3] == merkki1[3]
& (koti[3] == koti1[3] | vieras[3] == vieras1[3])){
print(2)
} else if (merkki[3] == merkki1[3]) {
print(322)
} else {
print(32)
}
library(dplyr)
library(knitr)
################### Hae oikea rivi ################
oikearivi <- read_excel("data/11oikearivi.xlsx")
###### Muokkaaa  sopivaksi #############
oikearivi <- oikearivi %>%
filter(!is.na(oikearivi[,6]),
!is.na(oikearivi[,8])
)#%>%
#rename(X__2 = Kotii,
#      X__4 = viieras
#)
############ Aseta tarkistussarjat ##################
koti <- oikearivi$...6
vieras <- oikearivi$...8
koti <- as.numeric(koti)
merkki <- c(1:length(koti))
merkki[1:length(koti)] <- NA
x <- c(1:length(koti))
for (i in x) {
if (koti[i]>vieras[i]){
merkki[i] <- 1
} else if (koti[i] == vieras[i]) {
merkki[i] <- 2
} else if (koti[i]<vieras[i]) {
merkki[i] <- 3
}
}
################# Luo Pistetaulu ###################
pelit <- c(1:50)
pelit[1] <- c("Veikkaaja")
pelit[2] <- c("Yhteensa")
for (i in x) {
pelit[i+2] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
pistetaulu <- matrix(NA,10,50)
colnames(pistetaulu) <- c(pelit)
pistetaulu <- as.data.frame(pistetaulu)
################### Veikkausten tarkistus ja lisays pistetauluun #######
y <- c(2:length(veikkaukset))
for (u in y) {
tarkistettava <- data.frame(veikkaukset[u])
pistetaulu[u-1, 1] <- tarkistettava[1,5]  ## asetetaan veikkaajan nimi
tarkistettava <- tarkistettava %>%
filter(!is.na(...6),
!is.na(...8)
)
koti1 <- tarkistettava$...6
vieras1 <- tarkistettava$...8
koti1 <- as.numeric(koti1)
merkki1 <- c(1:length(koti1))
merkki1[1:length(koti1)] <- NA
for (i in x) {
if(koti1[i]>vieras1[i]){
merkki1[i] <- 1
} else if (koti1[i] == vieras1[i]) {
merkki1[i] <- 2
} else if (koti1[i]<vieras1[i]) {
merkki1[i] <- 3
}
}
x <- c(1:length(koti))
for (i in x) {
if(koti[i] == koti1[i] & vieras[i] == vieras1[i]) {
pistetaulu[u-1, i+2] <- c(5)
} else if (merkki[i] == merkki1[i]
& (koti[i] == koti1[i] | vieras[i] == vieras1[i])){
pistetaulu[u-1, i+2] <- c(3)
} else if (merkki[i] == merkki1[i]) {
pistetaulu[u-1, i+2] <- c(2)
} else {
pistetaulu[u-1, i+2] <- c(0)
}
}
}
pistetaulu$Yhteensa <- apply(pistetaulu[1:10, 1:length(koti)+2], 1, sum)
sort(pistetaulu$Yhteensa)
# #wb <- createWorkbook(type = "xlsx")
# library(xlsx)
# write.xlsx(mydata, "c:/mydata.xlsx")
#
# taulu <- matrix(NA,10,50)
# y <- c(2:10)
# x <- c(1:50)
#
# for (u in y) {
#
#   for (i in x) {
#     taulu[u,i] <- u
#   }
# }
print(pistetaulu)
print(pistetaulu["Veikkaaja", "yhteensa"])
print(pistetaulu["Veikkaaja", "yhteensa"])
sort(pistetaulu$Yhteensa)
print(pistetaulu[,1:2])
print(sort(pistetaulu[,1:2]))
print(sort(pistetaulu[,1:2]$Yhteensa))
print(sort(pistetaulu[,1:2]$Yhteensa))
## Sano moi
print("Hello Euro22")
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
#Setup the working directory:
setwd("C:/Users/Pedu/Documents/GitHub/euro22/data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
#Setup the working directory:
setwd("C:/Users/Pedu/Documents/GitHub/euro22/data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
library(dplyr)
library(knitr)
################### Hae oikea rivi ################
oikearivi <- read_excel("data/11oikearivi.xlsx")
###### Muokkaaa  sopivaksi #############
oikearivi <- oikearivi %>%
filter(!is.na(oikearivi[,6]),
!is.na(oikearivi[,8])
)#%>%
#rename(X__2 = Kotii,
#      X__4 = viieras
#)
############ Aseta tarkistussarjat ##################
koti <- oikearivi$...6
vieras <- oikearivi$...8
koti <- as.numeric(koti)
merkki <- c(1:length(koti))
merkki[1:length(koti)] <- NA
x <- c(1:length(koti))
for (i in x) {
if (koti[i]>vieras[i]){
merkki[i] <- 1
} else if (koti[i] == vieras[i]) {
merkki[i] <- 2
} else if (koti[i]<vieras[i]) {
merkki[i] <- 3
}
}
################# Luo Pistetaulu ###################
pelit <- c(1:50)
pelit[1] <- c("Veikkaaja")
pelit[2] <- c("Yhteensa")
for (i in x) {
pelit[i+2] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
pistetaulu <- matrix(NA,10,50)
colnames(pistetaulu) <- c(pelit)
pistetaulu <- as.data.frame(pistetaulu)
################### Veikkausten tarkistus ja lisays pistetauluun #######
y <- c(2:length(veikkaukset))
for (u in y) {
tarkistettava <- data.frame(veikkaukset[u])
pistetaulu[u-1, 1] <- tarkistettava[1,5]  ## asetetaan veikkaajan nimi
tarkistettava <- tarkistettava %>%
filter(!is.na(...6),
!is.na(...8)
)
koti1 <- tarkistettava$...6
vieras1 <- tarkistettava$...8
koti1 <- as.numeric(koti1)
merkki1 <- c(1:length(koti1))
merkki1[1:length(koti1)] <- NA
for (i in x) {
if(koti1[i]>vieras1[i]){
merkki1[i] <- 1
} else if (koti1[i] == vieras1[i]) {
merkki1[i] <- 2
} else if (koti1[i]<vieras1[i]) {
merkki1[i] <- 3
}
}
x <- c(1:length(koti))
for (i in x) {
if(koti[i] == koti1[i] & vieras[i] == vieras1[i]) {
pistetaulu[u-1, i+2] <- c(5)
} else if (merkki[i] == merkki1[i]
& (koti[i] == koti1[i] | vieras[i] == vieras1[i])){
pistetaulu[u-1, i+2] <- c(3)
} else if (merkki[i] == merkki1[i]) {
pistetaulu[u-1, i+2] <- c(2)
} else {
pistetaulu[u-1, i+2] <- c(0)
}
}
}
pistetaulu$Yhteensa <- apply(pistetaulu[1:10, 1:length(koti)+2], 1, sum)
sort(pistetaulu$Yhteensa)
# #wb <- createWorkbook(type = "xlsx")
# library(xlsx)
# write.xlsx(mydata, "c:/mydata.xlsx")
#
# taulu <- matrix(NA,10,50)
# y <- c(2:10)
# x <- c(1:50)
#
# for (u in y) {
#
#   for (i in x) {
#     taulu[u,i] <- u
#   }
# }
print(pistetaulu["Veikkaaja", "yhteensa"])
print(pistetaulu[,1:2])
print(sort(pistetaulu[,1:2]$Yhteensa))
for (u in y) {
veikkaus <- data.frame(veikkaukset[u])
pelaaja <- veikkaus[[1,5]]
}
length(veikkaukset)
pelaajat <- c(length(veikkaukset))
pelaajat
pelaajat <- c(1:length(veikkaukset))
pelaajat
for (u in y) {
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
}
pelaajat <- c(2:length(veikkaukset))
for (u in y) {
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
}
for (u+1 in y) {
for (u in y) {
veikkaus <- data.frame(veikkaukset[u+1])
pelaajat[u] <- veikkaus[[1,5]]
}
pelaajat <- c(2:length(veikkaukset))
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
}
for (u in pelaajat) {
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
}
pelaajat <- c(2:length(veikkaukset))
for (u in pelaajat) {
##veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
}
veikkaus[[1,5]]
veikkaus <- data.frame(veikkaukset[u])
veikkaus[[1,5]]
u
pelaajat[u] <- veikkaus[[1,5]]
pelaajat <- c(2:length(veikkaukset))
for (u in pelaajat) {
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u-1] <- veikkaus[[1,5]]
}
View(veikkaukset)
veikkaukset[0]
print(veikkaukset[0])
veikkaus <- data.frame(veikkaukset[0])
print(veikkaus)
veikkaus <- data.frame(veikkaukset[1])
print(veikkaus)
veikkaus <- data.frame(veikkaukset[2])
pelaaja <- veikkaus[[1,5]]
print(pelaaja)
print(veikkaus)
print(pistetaulu[,1:2])
print(sort(pistetaulu[,1:2]$Yhteensa))
install.packages("formattable")
library(formattable)
formattable(pistetaulu)
formattable(veikkaus)
install.packages(gt)
install.packages("GT")
install.packages("gt")
install.packages("gt")
install.packages("gt")
#rm(list=ls())  # REMOVE ALL OBJECTS
### Asenna hyvaksi havaitut paketit ######
# pkgs <- c("data.table", # used for data import
#           "car",        # used for testing linear hypothesis
#           "haven",      # used for data import
#           #"tidyverse",  # data manipulation etc
#           "broom",      # for working with model coefficients and model summaries efficiently
#           "lubridate",  # used for creating timestamps
#           "DT",         # for displaying data_frames nicely
#           "GGally",     # for "ggpairs" plot
#           "ggfortify",
#           "plotly")  # for enhancing plots
#
# install.packages(c(pkgs))
# loaded_pkgs <- lapply(c(pkgs), library, character.only = TRUE)
#
# library(readxl)
library(gt)
install.packages("gt")
install.packages("gt")
install.packages("gt")
install.packages("rlang")
install.packages("gt")
library(gt)
oikearivi <- read_excel("data/11oikearivi.xlsx")
library(readxl)
oikearivi <- read_excel("data/11oikearivi.xlsx")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.2.tar.gz", repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.2.tar.gz", repos = NULL, type="source")
Sys.which("make")
Sys.which("make")
Sys.which(make)
Sys.which("make")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.2.tar.gz", repos = NULL, type="source")
